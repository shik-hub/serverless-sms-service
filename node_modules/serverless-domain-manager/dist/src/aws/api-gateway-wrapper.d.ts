/**
 * Wrapper class for AWS APIGateway provider
 */
import DomainConfig = require("../domain-config");
import DomainInfo = require("../domain-info");
import { APIGateway, ApiGatewayV2 } from "aws-sdk";
declare class APIGatewayWrapper {
    apiGateway: APIGateway;
    apiGatewayV2: ApiGatewayV2;
    constructor(credentials: any);
    /**
     * Creates Custom Domain Name through API Gateway
     * @param domain: DomainConfig
     */
    createCustomDomain(domain: DomainConfig): Promise<DomainInfo>;
    /**
     * Creates Custom Domain Name through API Gateway V1
     * @param domain: DomainConfig
     */
    private createCustomDomainV1;
    /**
     * Creates Custom Domain Name through API Gateway V2
     * @param domain: DomainConfig
     */
    private createCustomDomainV2;
    /**
     * Delete Custom Domain Name through API Gateway
     */
    deleteCustomDomain(domain: DomainConfig): Promise<void>;
    /**
     * Get Custom Domain Info through API Gateway
     */
    getCustomDomainInfo(domain: DomainConfig): Promise<DomainInfo>;
    /**
     * Creates basepath mapping
     */
    createBasePathMapping(domain: DomainConfig): Promise<void>;
    getApiMappings(domain: DomainConfig): Promise<ApiGatewayV2.GetApiMappingResponse[]>;
    /**
     * Updates basepath mapping
     */
    updateBasePathMapping(domain: DomainConfig): Promise<void>;
    /**
     * Deletes basepath mapping
     */
    deleteBasePathMapping(domain: DomainConfig): Promise<void>;
}
export = APIGatewayWrapper;
