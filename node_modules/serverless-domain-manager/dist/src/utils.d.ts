import { Service } from "aws-sdk";
/**
 * Iterate through the pages of a AWS SDK response and collect them into a single array
 *
 * @param service - The AWS service instance to use to make the calls
 * @param funcName - The function name in the service to call
 * @param resultsKey - The key name in the response that contains the items to return
 * @param nextTokenKey - The request key name to append to the request that has the paging token value
 * @param nextRequestTokenKey - The response key name that has the next paging token value
 * @param params - Parameters to send in the request
 */
declare function getAWSPagedResults(service: Service, funcName: string, resultsKey: string, nextTokenKey: string, nextRequestTokenKey: string, params: object): Promise<any[]>;
declare function throttledCall(service: Service, funcName: string, params: object): Promise<any>;
/**
 * Stops event thread execution for given number of seconds.
 * @param seconds
 * @returns {Promise<void>} Resolves after given number of seconds.
 */
declare function sleep(seconds: any): Promise<unknown>;
/**
 * Determines whether this boolean config is configured to true or false.
 *
 * This method evaluates a customDomain property to see if it's true or false.
 * If the property's value is undefined, the default value is returned.
 * If the property's value is provided, this should be boolean, or a string parseable as boolean,
 * otherwise an exception is thrown.
 * @param {boolean|string} value the config value provided
 * @param {boolean} defaultValue the default value to return, if config value is undefined
 * @returns {boolean} the parsed boolean from the config value, or the default value
 */
declare function evaluateBoolean(value: any, defaultValue: boolean): boolean;
export { evaluateBoolean, getAWSPagedResults, sleep, throttledCall, };
